<?xml version="1.0"?>
<robot xmlns:xacro="http://ww.ros.org/wiki/xacro">
    <!-- Start by including all required xacro files which hold the macros -->
    $(find neo_simulation)/robots/mpo_500/xacros/mpo_500_gazebo.xacro
    <xacro:include filename="$(find neo_simulation)/robots/mpo_500/xacros/trailer_gazebo.gazebo"/>
    <xacro:include filename="$(find neo_simulation)/robots/mpo_500/xacros/trailer_materials.xacro"/>
    <xacro:include filename="$(find neo_simulation)/robots/mpo_500/xacros/trailer_macros.xacro"/>
    <xacro:include filename="$(find neo_simulation)/robots/mpo_500/xacros/trailer_parameter.xacro"/>

    <!-- Create a dummy link as a base link-->
    <link name="base_link">
        <pose>0 0 0 0 0 0</pose>
    </link>
    <joint type="fixed" name="base_link_to_chassis">
        <child link="chassis_link"/>
        <parent link="base_link"/>
    </joint>

    <!-- Define the chassis of the differential drive robot, which is our base -->
    <link name="chassis_link">
        <pose>0 0 0 0 0 0</pose>
        <!-- Define inertial system for the chassis-->
        <inertial>
            <mass value="${m_chassis}"/>
            <xacro:box_inertia m="${m_chassis}" x="${x_chassis}" y="${y_chassis}" z="${z_chassis}" />
        </inertial>
        <!-- Define the surrounding collision box -->
        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${x_chassis} ${y_chassis} ${z_chassis}"/>
            </geometry>
        </collision>
        <!-- Define visualization structure-->
        <visual name="base_link_visual">
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${x_chassis} ${y_chassis} ${z_chassis}"/>
            </geometry>
        </visual>

        <!-- Add the caster wheel! Here we assume complete slippage, thus it is not required to rotate-->
        <collision name="caster_collision">
            <origin xyz="${-(r_wheel/2)+x_chassis/2} 0 ${-z_chassis/2}" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${r_wheel/2}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>0</mu>
                        <mu2>0</mu2>
                        <slip1>1.0</slip1>
                        <slip2>1.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual name="caster_visual">
            <origin xyz="${-(r_wheel/2)+x_chassis/2} 0 ${-z_chassis/2}" rpy="0 0 0"/>
            <geometry>
                <sphere radius="${r_wheel/2}"/>
            </geometry>
        </visual>
    </link>

    <!-- Add wheels to the robot -->
    <link name="left_wheel">
        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${r_wheel}" length="${h_wheel}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>1</mu>
                        <mu2>1</mu2>
                        <slip1>0.0</slip1>
                        <slip2>0.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual name="left_wheel_visual">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${r_wheel}" length="${h_wheel}"/>
            </geometry>
        </visual>
        <inertial>
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <mass value="${m_wheel}"/>
            <cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/>
            <xacro:cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/>
        </inertial>
    </link>

    <link name="right_wheel">
        <collision name="collision">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${r_wheel}" length="${h_wheel}"/>
            </geometry>
            <surface>
                <friction>
                    <ode>
                        <mu>1</mu>
                        <mu2>1</mu2>
                        <slip1>0.0</slip1>
                        <slip2>0.0</slip2>
                    </ode>
                </friction>
            </surface>
        </collision>
        <visual name="right_wheel_visual">
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <geometry>
                <cylinder radius="${r_wheel}" length="${h_wheel}"/>
            </geometry>
        </visual>
        <inertial>
            <origin xyz="0 0 0" rpy="0 1.5707 1.5707"/>
            <mass value="${m_wheel}"/>
            <cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/>
            <xacro:cylinder_inertia m="${m_wheel}" r="${r_wheel}" h="${h_wheel}"/>
        </inertial>
    </link>

    <!-- Set joints for the wheels which can be controlled via ROS-->
    <joint type="continuous" name="left_wheel_hinge">
        <origin xyz="${-x_chassis/4} ${y_chassis/2+h_wheel/2} ${r_wheel/2-z_chassis/2}" rpy="0 0 0"/>
        <child link="left_wheel"/>
        <parent link="base_link"/>
        <axis xyz="0 1 0" rpy="0 0 0"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="0.0"/>
    </joint>

    <joint type="continuous" name="right_wheel_hinge">
        <origin xyz="${-x_chassis/4} ${-y_chassis/2-h_wheel/2} ${r_wheel/2-z_chassis/2}" rpy="0 0 0"/>
        <child link="right_wheel"/>
        <parent link="base_link"/>
        <axis xyz="0 1 0" rpy="0 0 0"/>
        <limit effort="100" velocity="100"/>
        <joint_properties damping="0.0" friction="0.0"/>
    </joint>
</robot>